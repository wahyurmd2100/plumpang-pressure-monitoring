@model TMS.Web.Models.TankLiveData
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}
<head>
    @section Scripts{
        <script type="text/javascript">
            var oTable;
            $(document).ready(function () {
                oTable = $('#tb-tanklivedata').DataTable({
                        "serverSide": true, // for process server side
                        "scrollY": true,
                        "scrollX": true,
                        "autoWidth": false,
                        "scrollCollapse": true,
                        "paging": true,
                        "fixedColumns": true,
                        "processing": false,
                        "pageLength": 50,

                        "ajax": {
                            "url":  "@Url.Action("LoadData")",
                            "type": "POST",
                            "datatype": "json"
                        },
                        "columnDefs": [{
                            "targets": 0,
                            "visible": false,
                            "searchable": false
                        }],
                        //header pada masing-masing data pakai huruf kecil. mirip dengan data yang di response dr ajaxnya.
                        //contoh tadi Timestamp diganti timestamp karena header di responnya huruf kecil.
                        //liatnya di browser 
                        "columns": [
                            { "data": "tankId", "name": "TankId", "autoWidth": true },
                            { "data": "name", "name": "Name", "autoWidth": true },
                            { "data": "productName", "name": "productName", "autoWidth": true },
                            {
                                "data": "timeStamp",
                                "render": function (value) {
                                    if (value === null) return "";
                                    return moment(value).format('DD MMM YYYY hh:mm');
                                },

                                "name": "timeStamp", "autoWidth": true
                            },
                            {
                                "data": "level",                                
                                "name": "Level", "autoWidth": true
                            },
                            {
                                "data": "temperature",
                                "name": "Temperature", "autoWidth": true
                            },
                            {
                                "data": "grossVolume",                                
                                "name": "GrossVolume", "autoWidth": true
                            },
                            {
                                "data": "netVolume",                                
                                "name": "NetVolume", "autoWidth": true
                            },                         
                        ]
                });
                //setInterval(reloadTable, 2000); //ini dipakai untuk realtime data. tapi nanti dulu kalau sudah bener datanya.

            }); //end document ready
            function reloadTable() {
                oTable.ajax.reload(null, false);
            }
        </script>

        <script>
            function reset() {
                document.getElementById("product").value = "";
                document.getElementById("tank-name").value = "";

                location.reload()
            }
        </script>

        <script>
           

        </script>
    }

</head>
<!-- Begin Page Content -->
<div class="container-fluid">

    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Tank Monitoring</h1>
        <a value="reload" onclick="reloadTable()" class="d-none d-sm-inline-block btn btn-sm btn-info shadow-sm">
            <i class="fas fa-redo-alt"></i>
        </a>
    </div>

    <!-- Submain Content -->
    <div class="card shadow-lg rounded">
        <div class="card-header bg-gradient-info"></div>
        <div class="card-body">
           <!-- End Tank Filter -->
            <!-- Divider -->
            <hr class="sidebar-divider my-3">
            <!-- Tank Table -->
            @await Html.PartialAsync("_ViewAll", Model)
            <!-- End Tank table -->
        </div>
    </div>
    <!-- End Submain Content -->

</div>
<!-- End Page Content -->