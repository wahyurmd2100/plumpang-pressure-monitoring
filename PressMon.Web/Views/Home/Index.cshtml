@model TMS.Web.Models.Historical
@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}

<head>
    @section Scripts{
        <script src="~/assets/vendor/chart.js/Chart.bundle.min.js" asp-append-version="true"></script>
        <script src="~/assets/vendor/chart.js/chartPlugin.js" asp-append-version="true"></script>
        <script type="text/javascript" asp-append-version="true">

            //ready document
            $(document).ready(function () {
                ////////////////////////////////////// end datatable //////////////////////////////////////
                var oTable = $('#tb-record').DataTable(
                    {
                        "searching": false,
                        "lengthChange": false,  // Disable the "Show entries" dropdown
                        "pageLength": 5,      // Set the default number of entries displayed to 10
                        "serverSide": true, // for process server side
                        "scrollY": true,
                        "scrollX": true,
                        "autoWidth": false,
                        "scrollCollapse": true,
                        "paging": true,
                        "fixedColumns": true,
                        "processing": false,
                        "info": false,
                        "ajax": {
                            "url": "@Url.Action("GetDataRecord","Home")",
                            "type": "POST",
                            "datatype": "json"
                        },
                        "columnDefs": [{
                            "targets": 0,
                            "visible": false,
                            "searchable": false
                        }],
                        "columns": [
                            { "data": "historicalID", "name": "HistoricalID", "autoWidth": true },
                            { "data": "locationName", "name": "LocationName", "autoWidth": true },
                            { "data": "pressure", "name": "Pressure", "autoWidth": true },
                            { "data": "timeStamp", "name": "TimeStamp", "autoWidth": true },
                        ]
                    }
                );

                ////////////////////////////////////// end datatable //////////////////////////////////////

                ////////////////////////////////////// start pressure1 live data //////////////////////////////////////
                var pressPT01 = null;
                var pressPT02 = null;
                var gaugeViewPT01 = null;
                var gaugeViewPT02 = null;

                //start current data
                var pressCanvasPT01 = document.getElementById('pressPT01');
                var pressCanvasPT02 = document.getElementById('pressPT02');
                var pressCtxPT01 = pressCanvasPT01.getContext('2d');
                var pressCtxPT02 = pressCanvasPT02.getContext('2d');
                var gaugeViewCtxPT01 = document.getElementById('gaugeViewPT01').getContext('2d');
                var gaugeViewCtxPT02 = document.getElementById('gaugeViewPT02').getContext('2d');
                

                var pressOptions = {
                    responsive: true,
                    cutoutPercentage: 70, // Adjust this value to control the size of the center hole
                    legend: {
                        display: false
                    },
                    tooltips: {
                        enabled: false
                    },
                    rotation: -Math.PI, // Rotates the chart to make it a half-circle
                    circumference: Math.PI, // Sets the circumference to make it a half-circle
                    animation: {
                        animateRotate: false,
                        animateScale: false,
                    },
                    elements: {
                        arc: {
                            borderWidth: 10
                        }
                    }
                };

                //gauge pressure
                const pressConfigPT01 = {
                    type: 'doughnut',
                    data: {
                        labels: ['Current Pressure'],
                        datasets: [{
                            data: [0, 10 - 0],
                            backgroundColor: ['#36b9cc', 'rgba(0, 0, 0, 0)'],
                        }]
                    },
                    options: pressOptions
                };
                const pressConfigPT02 = {
                    type: 'doughnut',
                    data: {
                        labels: ['Current Pressure'],
                        datasets: [{
                            data: [0, 10 - 0],
                            backgroundColor: ['#36b9cc', 'rgba(0, 0, 0, 0)'],
                        }]
                    },
                    options: pressOptions
                };

                //gauge alarm
                const alarmConfig = {
                    type: 'doughnut',
                    data: {
                        labels: ['LL', 'L', 'N', 'H', 'HH'],
                        datasets: [{
                            data: [1, 1, 6, 1, 1],
                            backgroundColor: ['#212529', '#6c757d', '#36b9cc', '#ffc107', '#dc3545']
                        }]
                    },
                    options: {
                        responsive: true,
                        cutoutPercentage: 95, // Adjust this value to control the size of the center hole and the thickness of the overlay
                        legend: {
                            display: false
                        },
                        tooltips: {
                            enabled: false
                        },
                        hover: {
                            mode: null // Disable hover effect
                        },
                        //,
                        rotation: -Math.PI, // Rotates the chart to make it a half-circle
                        circumference: Math.PI, // Sets the circumference to make it a half-circle
                        animation: {
                            animateRotate: false, // Disable rotation animation
                            animateScale: false, // Disable scaling animation
                        },
                        plugins: {
                            centerText: false   // disable plugin 'p1' for this instance
                        }
                    }
                };

                //Initial chart
                pressPT01 = new Chart(pressCtxPT01, pressConfigPT01);
                pressPT02 = new Chart(pressCtxPT02, pressConfigPT02);
                gaugeViewPT01 = new Chart(gaugeViewCtxPT01, alarmConfig);
                gaugeViewPT02 = new Chart(gaugeViewCtxPT02, alarmConfig);
                //console.log(press);



                // Function to initialize the chart
                function UpdatePressChart(result) {
                    pressPT01.data.datasets[0].data = [result[0].pressure, 10 - result[0].pressure];
                    pressPT01.update();
                    pressPT02.data.datasets[0].data = [result[1].pressure, 10 - result[1].pressure];
                    pressPT02.update();
                    console.log(result);

                }

                ////////////////////////////////////// end pressure1 live data //////////////////////////////////////

                // Function to fetch updated data from the server
                function fetchData() {
                    $.ajax({
                        url: '@Url.Action("GetLiveData","Home")',
                        type: 'GET',
                        dataType: 'json',
                        success: function (result) {


                            UpdatePressChart(result.liveData);
                            SetChartLineHistory(result.historyData);
                            oTable.ajax.reload(null, false);
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                }
                // Refresh the chart at regular intervals
                setInterval(fetchData, 1000);














                































                ////////////////////////////////////// start data visualization //////////////////////////////////////
                var tableRows = document.querySelectorAll(".table tbody tr"); // Get the table rows

                // Extract data from table rows
                var dataLabels = [];
                var dataValues = [];
                for (var i = 0; i < tableRows.length; i++) {
                    var row = tableRows[i];
                    var cells = row.getElementsByTagName("td");
                    var value = parseFloat(cells[0].textContent);
                    if (!isNaN(value)) { // Skip null or empty values
                        dataValues.push(value);
                        dataLabels.push(cells[1].textContent);
                    }
                }

                // Create the line chart
                var ctx = document.getElementById('dataVisualization').getContext('2d');
                var dataVisualization = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: dataLabels,
                        datasets: [{
                            label: 'Pressure Value',
                            data: dataValues,
                            borderColor: '#36b9cc',
                            fill: false
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {                                
                            xAxes: [
                                {
                                display: true,
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Timestamp'
                                }
                            }],
                            yAxes: [
                                {
                                    ticks: {
                                        max: 30, // Set your desired maximum value here
                                        beginAtZero: true, // If you want the scale to start from zero
                                        
                                    }, scaleLabel: {
                                        display: true,
                                        labelString: 'Pressure Value'
                                    }
                                }]
                        },
                        plugins: {
                            centerText: false   // disable plugin 'p1' for this instance
                        }
                    }
                });

                //set to Hiscorical Data
                function SetChartLineHistory(history) {
                    // Extract data from table rows
                    var dataLabels = [];
                    var dataValues = [];
                    for (var i = 0; i < history.length; i++) {
                        var row = history[i];
                        var cells = row;
                        var value = parseFloat(cells.pressure);
                        if (!isNaN(value)) { // Skip null or empty values
                            dataValues.push(value);
                            dataLabels.push(cells.timeStamp);
                        }
                    }
                    dataVisualization.data.datasets[0].data = dataValues;
                    dataVisualization.data.labels = dataLabels;
                    //console.log(dataValues);
                    dataVisualization.update();
                }

                ////////////////////////////////////// end data visualization //////////////////////////////////////

                

                

                
            }); //end Document

        </script>
    }

</head>

<!-- Begin Page Content -->
<div class="container-fluid">

    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h4 mb-0 text-gray-800">Dashboard</h1>
        <a value="reload" onclick="document.location.reload(true)" class="d-none d-sm-inline-block btn btn-sm btn-info shadow-sm">
            <i class="fas fa-redo-alt"></i>
        </a>
    </div>

    <!-- Dashboard -->

    
    <div class="row g-2">
        <!-------------------------------- Start PT-01 -------------------------------->
        <div class="col-3">
            <div class="card h-100 d-flex flex-column shadow-lg rounded">
                <div class="card-header bg-gradient-info p-1"></div>
                <div class="card-body">
                    <h5 class="card-title">PT-01</h5>
                    <div class="my-auto" style="position:relative">
                        <canvas id="pressPT01"></canvas>
                        <canvas id="gaugeViewPT01" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <!-------------------------------- End PT-01 -------------------------------->

        <!-------------------------------- Start PT-02 -------------------------------->
        <div class="col-3">
            <div class="card h-100 d-flex flex-column shadow-lg rounded">
                <div class="card-header bg-gradient-info p-1"></div>
                <div class="card-body">
                    <h5 class="card-title">PT-02</h5>
                    <div class="my-auto" style="position:relative">
                        <canvas id="pressPT02"></canvas>
                        <canvas id="gaugeViewPT02" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <!-------------------------------- End PT-02 -------------------------------->

        <!-------------------------------- Start Table -------------------------------->
        <div class="col-6">
            <div class="card shadow-lg rounded h-100">
                <div class="card-header bg-gradient-info p-1"></div>
                <div class="card-body">
                    <h5 class="card-title">
                        <a class="text-secondary" asp-area="" asp-controller="Historical" asp-action="Index">
                            Last Record Data
                        </a>
                    </h5>
                    <!-- Tank Table -->
                    @await Html.PartialAsync("_ViewAll", Model)
                    <!-- End Tank table -->
                </div>
            </div>
        </div>
        <!-------------------------------- End Table -------------------------------->
    </div>
    




    <div class="row my-4">
        <div class="col-12">
            <div class="card shadow-lg">
                <div class="card-header bg-gradient-info p-1"></div>
                <div class="card-body">
                    <h5 class="card-title">Data Visualization</h5>
                    <div style="height: 500px">
                        <canvas id="dataVisualization"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>