@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}

<head>
    @section Scripts{
        <script src="~/microsoft/signalr/dist/browser/signalr.min.js"></script>
        <script type="text/javascript">
            var intervalModalShow;
            var intervalHomeLoad;
            var TankId;
            //signal R
            var connection = new signalR.HubConnectionBuilder().withUrl("/homehub").build();
            connection.on("ReceiveData", function (result) {
                // update dashboard with new data
                console.log(result); //tampilkan data ini di gauge pressure
            });
            connection.start();

            //start current data
            var pressCtx = document.getElementById('press').getContext('2d');
            var gaugeViewCtx = document.getElementById('gaugeView').getContext('2d');

            var dataValue = ((Math.random() * 9) + 1).toFixed(2);

            var press = new Chart(pressCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Current Pressure'],
                    datasets: [{
                        data: [dataValue, 10 - dataValue],
                        backgroundColor: ['#36b9cc', 'rgba(0, 0, 0, 0)'],
                    }]
                },
                options: {
                    responsive: true,
                    cutoutPercentage: 70, // Adjust this value to control the size of the center hole
                    legend: {
                        display: false
                    },
                    tooltips: {
                        enabled: false
                    },
                    rotation: -Math.PI, // Rotates the chart to make it a half-circle
                    circumference: Math.PI, // Sets the circumference to make it a half-circle
                    animation: {
                        animateRotate: true,
                        animateScale: false,
                        onComplete: function () {
                            var chart = this.chart;
                            var valueText = dataValue
                            var unitText = 'psi';

                            var width = chart.chart.width;
                            var height = chart.chart.height;
                            var ctx = chart.chart.ctx;

                            ctx.restore();
                            var valueFontSize = (height / 3).toFixed(2); // Adjust the divisor to increase or decrease the font size of the value
                            var unitFontSize = (height / 6).toFixed(2); // Adjust the divisor to increase or decrease the font size of the unit

                            ctx.font = "bold " + valueFontSize + "px Arial"; // Set the font style and size for the value
                            ctx.textBaseline = "middle";
                            ctx.fillStyle = "#36b9cc"; // Set the text color for the value

                            ctx.textAlign = 'center';
                            ctx.fillText(valueText, width / 2, height / 1.6); // Adjust the vertical position of the value

                            ctx.font = unitFontSize + "px Arial"; // Set the font style and size for the unit
                            ctx.fillStyle = "#6c757d"; // Set the text color for the unit

                            ctx.fillText(unitText, width / 2, height / 1.2); // Adjust the vertical position of the unit
                            ctx.save();

                        }
                    }
                }
            });


            var gaugeView = new Chart(gaugeViewCtx, {
                type: 'doughnut',
                data: {
                    labels: ['LL', 'L', 'N', 'H', 'HH'],
                    datasets: [{
                        data: [1, 1, 6, 1, 1],
                        backgroundColor: ['#212529', '#6c757d', '#36b9cc', '#ffc107', '#dc3545']
                    }]
                },
                options: {
                    responsive: true,
                    cutoutPercentage: 95, // Adjust this value to control the size of the center hole and the thickness of the overlay
                    legend: {
                        display: false
                    },
                    tooltips: {
                        enabled: false
                    },
                    hover: {
                        mode: null // Disable hover effect
                    },
                    rotation: -Math.PI, // Rotates the chart to make it a half-circle
                    circumference: Math.PI, // Sets the circumference to make it a half-circle
                    animation: {
                        animateRotate: false, // Disable rotation animation
                        animateScale: false, // Disable scaling animation
                    }
                }
            });
            //end current data

            //start data visualization
            var tableRows = document.querySelectorAll(".table tbody tr"); // Get the table rows

            // Extract data from table rows
            var dataLabels = [];
            var dataValues = [];
            for (var i = 0; i < tableRows.length; i++) {
                var row = tableRows[i];
                var cells = row.getElementsByTagName("td");
                var value = parseFloat(cells[0].textContent);
                if (!isNaN(value)) { // Skip null or empty values
                    dataValues.push(value);
                    dataLabels.push(cells[1].textContent);
                }
            }

            // Create the line chart
            var ctx = document.getElementById('dataVisualization').getContext('2d');
            var dataVisualization = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: dataLabels,
                    datasets: [{
                        label: 'Pressure Value',
                        data: dataValues,
                        borderColor: '#36b9cc',
                        fill: false
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        xAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Timestamp'
                            }
                        }],
                        yAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Pressure Value'
                            }
                        }]
                    }
                }
            });
            //end data visualization


        </script>
    }

</head>

<!-- Begin Page Content -->
<div class="container-fluid">

    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h4 mb-0 text-gray-800">Dashboard</h1>
        <a value="reload" onclick="document.location.reload(true)" class="d-none d-sm-inline-block btn btn-sm btn-info shadow-sm">
            <i class="fas fa-redo-alt"></i>
        </a>
    </div>

    <!-- Dashboard -->
    <div class="row g-2">
        <div class="col-4">
            <div class="card h-100 d-flex flex-column">
                <div class="card-body">
                    <h5 class="card-title">Pressure (Psi)</h5>
                    <div style="position:relative">
                        <canvas id="press"></canvas>
                        <canvas id="gaugeView" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-8">
            <div class="card h-100 d-flex flex-column">
                <div class="card-body">
                    <h5 class="card-title">Last Record Data</h5>
                    <div class="table-responsive">
                        <table id="tb-tanklivedata" class="table table-sm table-striped table-bordered dt-responsive nowrap text-sm table-hover mb-0">
                            <thead>
                                <tr>
                                    <th class="fw-bold">Pressure Value</th>
                                    <th class="fw-bold">Timestamp</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>3.14</td>
                                    <td>2023-05-25 10:15:22</td>
                                </tr>
                                <tr>
                                    <td>2.76</td>
                                    <td>2023-05-25 11:20:10</td>
                                </tr>
                                <tr>
                                    <td>4.82</td>
                                    <td>2023-05-25 12:35:45</td>
                                </tr>
                                <tr>
                                    <td>1.97</td>
                                    <td>2023-05-25 13:45:30</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="row my-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Data Visualization</h5>
                    <canvas id="dataVisualization"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>