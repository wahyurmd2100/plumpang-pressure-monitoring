@model PressMon.Web.Models.TankTicket

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}
@*physical Inventor*@
<head>
    @section Scripts{
        <script type="text/javascript" asp-append-version="true">
            var oTable;
            $(document).ready(function () {
                 oTable = $('#tb-pi').DataTable(
                    {
                        "serverSide": true, // for process server side
                        "scrollY": "500px",
                        "scrollX": true,
                        "autoWidth": false,
                        "scrollCollapse": true,
                        "paging": true,
                        "fixedColumns": true,
                        "processing": true,
                        "ajax": {
                            "url": "@Url.Action("LoadData")",
                            "type": "POST",
                            "datatype": "json"
                            
                        },
                        "columnDefs": [{
                            "targets": 0,
                            "visible": false,
                            "searchable": false
                        }],
                        "columns": [
                            { "data": "id", "name": "Id", "autoWidth": true },
                            {
                                "data": "is_Upload_Success",
                                render: function (data, type, full, meta) {
                                    var renderHTML = "";
                                    var head = "<div class='btn-group' role='group' aria-label='Basic example'>";
                                    var edit = "<button type='button' class='btn btn-warning' onclick=UpdateData('" + full.id + "');><i class='fas fa-edit'></i></button>";
                                    var upload = "<button type='button' class='btn btn-success' onclick=UploadData('" + full.id + "');><i class='fas fa-upload'></i></button>";
                                    var foot = "</div>";
                                    if (data == 0) {
                                        renderHTML = head + edit + upload + foot;
                                    }
                                    return renderHTML;
                                }
                            },
                            { "data": "name", "name": "Name", "autoWidth": true },
                            { "data": "ticket_Number", "name": "TicketNumber", "autoWidth": true },
                            { "data": "timestamp", "name": "Timestamp", "autoWidth": true },
                            { "data": "operation_Type", "name": "OperationType", "autoWidth": true },
                            {
                                "data": "operation_Status",
                                render: function (data, type) {
                                    if (data == 1) {
                                        return "Open";
                                    }
                                    else {
                                        return "Close";
                                    }
                                },
                                "name": "Operation_Status", "autoWidth": true
                            },
                            { "data": "measurement_Method", "name": "Measurement_Method", "autoWidth": true },
                            { "data": "liquid_Level", "name": "Liquid_Level", "autoWidth": true },
                            { "data": "water_Level", "name": "Water_Level", "autoWidth": true },
                            { "data": "liquid_Temperature", "name": "Liquid_Temperature", "autoWidth": true },
                            { "data": "liquid_Density", "name": "Liquid_Density", "autoWidth": true },
                        ]
                    });

            }); //end document ready
            //update data
            function UpdateData(Id) {
                var toSend =
                {
                    id: Id
                };
                $.ajax({
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    url: "@Url.Action("AddOrEdit")",
                    data: toSend,
                    success: function (res) {
                        jQuery.noConflict();
                        $("#form-modal").modal();
                        $("#form-modal .modal-body").html(res);
                        $("#form-modal .modal-title").html('Edit Tank Ticket');
                        $("#form-modal").modal('show');
                    },
                    error: function (res) {
                        console.log(res);
                    }
                })
            }
            //update data
            function UploadData(Id) {
                var toSend =
                {
                    id: Id
                };
                $.ajax({
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    url: "@Url.Action("PostData")",
                    data: toSend,
                    success: function (res) {
                        oTable.ajax.reload(null, false);
                    },
                    error: function (res) {
                        console.log(res);
                    }
                })
            }
            //end update data
            //start delete data
            function DeleteData(Id) {
                if (confirm('Are you sure want to delete this data ?')) {
                    var toSend =
                    {
                        id: Id
                    };
                    console.log(Id);
                    $.ajax({
                        type: 'POST',
                        url: "@Url.Action("Delete")",
                        data: toSend,
                        success: function (res) {
                            oTable.ajax.reload(null, false);
                        },
                        error: function (err) {
                            console.log(err);
                        }
                    })
                }
            }

            function GetData(Id,method){
                var toSend =
                {
                    id: Id
                };
                $.ajax({
                    type: 'POST',
                    url: "@Url.Action("GetData")",
                    data: toSend,
                    success: function (result) {
                        setData(method,result);

                    },
                    error: function (err) {
                        console.log(err);
                    }
                })
            }
            function setData(method, result) {
                if (method == "Automatic") {
                    document.getElementById("level").value = result.liquidLevel.toFixed(0);
                    document.getElementById("water").value = result.waterLevel.toFixed(2);
                    document.getElementById("temperature").value = result.liquidTemperature.toFixed(2);
                    document.getElementById("density").value = result.liquidDensity.toFixed(3);
                }
                else
                {
                    document.getElementById("level").value = 0;
                    document.getElementById("water").value = 0;
                    document.getElementById("temperature").value = 0;
                    document.getElementById("density").value = 0;
                }
            }

            //reload data
            function reloadTable() {
                oTable.ajax.reload(null, false);
            }
        </script>
        <script type="text/javascript" asp-append-version="true">
            function reset() {
                document.getElementById("tankticket").value = "";
                document.getElementById("tank-name").value = "";
                reloadTable();
            }

        </script>
    }
</head>

<!-- Begin Page Content -->
<div class="container-fluid">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Physical Inventory Report</h1>
        <a value="reload" onclick="reloadTable()" class="d-none d-sm-inline-block btn btn-sm btn-info shadow-sm">
            <i class="fas fa-redo-alt"></i>
        </a>
    </div>

    <!-- Submain Content -->
    <div class="card shadow-lg rounded" style="width: 100%;">
        <div class="card-header bg-gradient-info"></div>
        <div class="card-body">

            <!-- Tank Filter -->
            <form>
                <div class="form-row">
                    <div class="col-md-2">
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <label class="input-group-text" for="tank">Tank</label>
                            </div>
                            <select id="tank-name" class="custom-select" id="tank" asp-items=@(new SelectList(ViewBag.TankId,"TankId","Name"))>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="Ticket-Number"><i class="fab fa-slack-hash"></i></span>
                            </div>
                            <input type="text" class="form-control" placeholder="Ticket Number" aria-label="Ticket-Number" aria-describedby="Ticket-Number" id="ticket-number">
                        </div>
                    </div>               
                    <div class="col-md-2">
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="min-date">Date Picker</span>
                            </div>
                            <input type="text" name="min-date" id="min" class="form-control" placeholder="Start From" aria-label="Min-Date" aria-describedby="min-date">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="max-date">Date Picker</span>
                            </div>
                            <input type="text" name="max-date" id="max" class="form-control" placeholder="Until" aria-label="Max-date" aria-describedby="max-date">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="input-group mb-1">
                            <button type="reset" class="btn btn-warning" style="width: 100%;" onclick="reloadTable()"><i class="fas fa-undo-alt"></i> Reset Filter</button>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="input-group mb-1">
                            <button type="button" class="btn btn-primary" style="width: 100%;" onclick="showInPopup('@Url.Action("AddOrEdit","TankTicket",null,Context.Request.Scheme)','Add New Tank Ticket')"><i class="fas fa-plus"></i> New</button>
                        </div>
                    </div>
                </div>
            </form>

            <!-- End Tank Filter-->
            <!-- Divider -->
            <hr class="sidebar-divider my-3">

            <!-- Tank Table -->
            @await Html.PartialAsync("_ViewAll", Model)

            <!-- End Tank table -->

        </div>
    </div>
    <!-- End Submain Content -->
</div>
<!-- End Page Content -->